  {
  "_comment": "Parameters to control optimisation. This is used within DFOLS optimisation routines AND not by framework",
  "provisional":
    {
      "provisional_comment":"Options to control provisional evaluation. This gives parallel simulations.",
      "max_provisional_cases":20,
      "max_provisional_cases_comment":"The Max number of provisional cases to do. If null no provisional cases are done",
      "rng_seed":1234567,
      "rng_seed_comment":"The seed for the random number generator. If null a default value is used. "
    },
  "algorithm": "DFOLS",
  "algorithm_comment": "Algorithm wanted.",
  "sigma": true,
  "sigma_comment": "If True use constraint weights",
  "mu": 0.01,
  "mu_comment": "The inverse weighting given to the constraint -- it gets wt 1/(2mu). If Null then no constraint should be applied",
  "dfols":{
  "growing.ndirs_initial": null,
  "growing.ndirs_initial_comment": "the number of perturbations on first iteration. If not specified then will make Nparm perturbtions",
  "rhobeg": 0.18,
  "rhobeg_comment": "Radius of parameter trust region at start",
  "rhoend": 0.1,
  "rhoend_comment": "Radius of parameter trust region for termination (for our purpose this is in normalised parameters)",
  "maxfun": 50,
  "maxfun_comment": "Maximum number of model evaluations to be done. Default is O(1000). reduced to 50 so have data to do a mid-point look at  ",
  "scaling_within_bounds": true,
  "scaling_within_bounds_comment": "Scale internally so all in range 0 to 1",
  "raise_error":null,
  "raise_error_comment":"If True then allow optimise function to raise error rather than DFOLS. Default is false",
  "trap_two_evals":true,
  "trap_two_evals_comment":"If true then if dfols generates two evaluations (which is should not) then the last one will be ignored. Default value is False.",
  "namedSettings": {
      "logging.save_poisedness": true,
      "logging.save_poisedness_comment": "whether or not  to calculate geometry statistics as part of diagnostic information",
      "init.random_initial_directions": false,
      "init.random_initial_directions_comment": "If true perturb in random directions. If false perturb along co-ordinate axis. Set false when provisional running on.",
      "init.run_in_parallel": false,
      "init.run_in_parallel_comment": "Run initial cases in parallel. Set false when provisional running",
      "noise.additive_noise_level": 21.0,
      "noise.additive_noise_level_comment": "Estimate of noise in cost function. Used in termination -- nb cost fn is sum of squares **not** sum of squares/nObs. ",
      "logging.save_diagnostic_info": true,
      "logging.save_diagnostic_info_comment": "Save logging info",
      "logging.save_xk": true,
      "logging.save_xk_comment": "Save the full vector of trial values ",
      "noise.quit_on_noise_level": true,
      "noise.quit_on_noise_level_comment": "quit/restart if all trial evaluations are within noise level of last iteration",
      "general.check_objfun_for_overflow": false,
      "general.check_objfun_for_overflow_comment": "Presumably check that function behaves itself",
      "slow.history_for_slow": 2,
      "slow.history_for_slow_comment": "No of past successful iterations to look at to decide if slow or not",
      "slow.thresh_for_slow": 0.1,
      "slow.thresh_for_slow_comment": "Log cost function  change for slow convergence",
      "slow.max_slow_iters": 5,
      "slow.max_slow_iters_comment": "The number of iterations (once slow determined) to decide making slow progress",
      "restarts.use_restarts": true,
      "restarts.use_restarts_comment": "Restart when slow convergence or too noisy. ",
      "restarts.use_soft_restarts": true,
      "restarts.use_soft_restarts_comment": "Use soft restart -- reuse some existing points when  restarting",
      "restarts.soft.num_geom_steps": 3,
      "restarts.soft.num_geom_steps_comment": "How many extra runs to be done when restarting",
      "restarts.increase_npt": false,
      "restarts.increase_npt_comment": "Increase number of points when restarting",
      "restarts.increase_npt_amt_comment": "Number of points to increase by in restarts.increase_npt set when restarting",
      "restarts.max_unsuccessful_restarts": 100,
      "restarts.max_unsuccessful_restarts_comment": "Number of consecutive restarts allowed when no progress made",
      "restarts.hard.increase_ndirs_initial_amt": 1,
      "restarts.hard.increase_ndirs_initial_amt_comment": "How many points to increase by  when doing hard restart (not using any exisiting pts)",
      "restarts.max_npt": null,
      "restarts.max_npt_comment": "Maximum number of points/model evals in each restart",
      "tr_radius.gamma_dec": 0.8,
      "tr_radius.alpha1": 0.9,
      "tr_radius.alpha2": 0.95
      },
      "namedSettings_comment": "Settings for named parameters that get passed into dfols via user_params"
  },
  "dfols_comment": "Settings for DFOLS"
}